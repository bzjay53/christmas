# Christmas Trading - Nginx Configuration
# Reverse proxy for Docker services

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 로그 설정
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    # 기본 설정
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 업스트림 서비스 정의
    upstream christmas_app {
        server christmas-trading:3000;
    }

    upstream task_master_mcp {
        server christmas-trading:8001;
    }

    upstream memory_bank_mcp {
        server christmas-trading:8002;
    }

    upstream gemini_mcp {
        server christmas-trading:8003;
    }

    # HTTP 서버 블록
    server {
        listen 80;
        server_name localhost christmas-trading.local;

        # 보안 헤더
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # 메인 애플리케이션 (Christmas Trading Frontend)
        location / {
            proxy_pass http://christmas_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 지원
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 타임아웃 설정
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # MCP API 엔드포인트들
        location /api/mcp/task-master/ {
            proxy_pass http://task_master_mcp/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/mcp/memory-bank/ {
            proxy_pass http://memory_bank_mcp/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/mcp/gemini/ {
            proxy_pass http://gemini_mcp/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Gemini API는 더 긴 타임아웃 필요
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # 정적 파일 캐싱
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://christmas_app;
            proxy_set_header Host $host;
            
            # 캐싱 설정
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # CORS 헤더 (필요한 경우)
            add_header Access-Control-Allow-Origin "*";
        }

        # 헬스체크 엔드포인트
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # MCP 서비스 헬스체크
        location /health/mcp {
            access_log off;
            proxy_pass http://christmas_app/health;
            proxy_set_header Host $host;
        }

        # API 문서 (개발 환경에서만)
        location /docs/ {
            proxy_pass http://christmas_app/docs/;
            proxy_set_header Host $host;
            
            # 개발 환경에서만 접근 허용
            # allow 127.0.0.1;
            # allow 10.0.0.0/8;
            # deny all;
        }

        # 에러 페이지
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            proxy_pass http://christmas_app/50x.html;
        }
    }

    # HTTPS 서버 블록 (SSL 인증서가 있는 경우)
    # server {
    #     listen 443 ssl http2;
    #     server_name christmas-trading.local;

    #     ssl_certificate /etc/nginx/ssl/christmas-trading.crt;
    #     ssl_certificate_key /etc/nginx/ssl/christmas-trading.key;
    #     ssl_session_timeout 1d;
    #     ssl_session_cache shared:MozTLS:10m;
    #     ssl_session_tickets off;

    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;

    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000" always;

    #     # 나머지 설정은 HTTP 블록과 동일
    #     location / {
    #         proxy_pass http://christmas_app;
    #         # ... 나머지 proxy 설정
    #     }
    # }
}