openapi: 3.0.3
info:
  title: "Christmas API"
  description: "Christmas 초단타 트레이딩 플랫폼 API"
  version: "1.0.0"
  contact:
    name: "Christmas 개발팀"
    email: "christmas-dev@example.com"
    url: "https://github.com/christmas/trading-platform"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"

servers:
  - url: "https://api.christmas-trading.com/v1"
    description: "프로덕션 서버"
  - url: "https://api-dev.christmas-trading.com/v1"
    description: "개발 서버"
  - url: "http://localhost:8000/v1"
    description: "로컬 개발 환경"

tags:
  - name: "인증"
    description: "API 키 및 인증 관련 엔드포인트"
  - name: "시장 데이터"
    description: "시장 데이터 조회 및 구독 엔드포인트"
  - name: "전략"
    description: "트레이딩 전략 관리 엔드포인트"
  - name: "주문"
    description: "주문 생성 및 관리 엔드포인트"
  - name: "포트폴리오"
    description: "포트폴리오 관리 엔드포인트"
  - name: "백테스트"
    description: "백테스트 실행 및 결과 조회 엔드포인트"
  - name: "모니터링"
    description: "시스템 모니터링 엔드포인트"
  - name: "알림"
    description: "알림 구성 및 관리 엔드포인트"

paths:
  /auth/api-key:
    post:
      tags:
        - "인증"
      summary: "API 키 생성"
      description: "새로운 API 키를 생성합니다."
      operationId: "createApiKey"
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: "API 키 이름"
                permissions:
                  type: array
                  items:
                    type: string
                  description: "권한 목록"
                expires_in:
                  type: integer
                  description: "만료 기간(초)"
      responses:
        "201":
          description: "API 키 생성 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKey"
        "400":
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "인증 실패"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
  /market/prices:
    get:
      tags:
        - "시장 데이터"
      summary: "시장 가격 데이터 조회"
      description: "특정 종목의 시장 가격 데이터를 조회합니다."
      operationId: "getMarketPrices"
      security:
        - ApiKeyAuth: []
      parameters:
        - name: "symbol"
          in: "query"
          description: "종목 코드"
          required: true
          schema:
            type: string
        - name: "interval"
          in: "query"
          description: "가격 간격(1m, 5m, 15m, 1h, 4h, 1d)"
          required: true
          schema:
            type: string
            enum: ["1m", "5m", "15m", "1h", "4h", "1d"]
        - name: "start"
          in: "query"
          description: "시작 시간(ISO 8601 형식)"
          required: false
          schema:
            type: string
            format: date-time
        - name: "end"
          in: "query"
          description: "종료 시간(ISO 8601 형식)"
          required: false
          schema:
            type: string
            format: date-time
        - name: "limit"
          in: "query"
          description: "반환할 데이터 포인트 수"
          required: false
          schema:
            type: integer
            default: 100
      responses:
        "200":
          description: "시장 가격 데이터 조회 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  symbol:
                    type: string
                  interval:
                    type: string
                  prices:
                    type: array
                    items:
                      $ref: "#/components/schemas/OHLCV"
        "400":
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "인증 실패"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: "종목 코드를 찾을 수 없음"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /orders:
    post:
      tags:
        - "주문"
      summary: "주문 생성"
      description: "새로운 주문을 생성합니다."
      operationId: "createOrder"
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
      responses:
        "201":
          description: "주문 생성 성공"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "인증 실패"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
    get:
      tags:
        - "주문"
      summary: "주문 목록 조회"
      description: "주문 목록을 조회합니다."
      operationId: "getOrders"
      security:
        - ApiKeyAuth: []
      parameters:
        - name: "status"
          in: "query"
          description: "주문 상태"
          required: false
          schema:
            type: string
            enum: ["open", "closed", "canceled", "all"]
            default: "open"
        - name: "symbol"
          in: "query"
          description: "종목 코드"
          required: false
          schema:
            type: string
        - name: "start"
          in: "query"
          description: "시작 시간(ISO 8601 형식)"
          required: false
          schema:
            type: string
            format: date-time
        - name: "end"
          in: "query"
          description: "종료 시간(ISO 8601 형식)"
          required: false
          schema:
            type: string
            format: date-time
        - name: "limit"
          in: "query"
          description: "반환할 주문 수"
          required: false
          schema:
            type: integer
            default: 50
      responses:
        "200":
          description: "주문 목록 조회 성공"
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
                  count:
                    type: integer
                  total:
                    type: integer
        "400":
          description: "잘못된 요청"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: "인증 실패"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
  
  schemas:
    ApiKey:
      type: object
      properties:
        id:
          type: string
          format: uuid
        key:
          type: string
        secret:
          type: string
        name:
          type: string
        permissions:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
        is_active:
          type: boolean
    
    OHLCV:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        open:
          type: number
          format: double
        high:
          type: number
          format: double
        low:
          type: number
          format: double
        close:
          type: number
          format: double
        volume:
          type: number
          format: double
    
    OrderRequest:
      type: object
      required:
        - symbol
        - side
        - type
        - quantity
      properties:
        symbol:
          type: string
          description: "종목 코드"
        side:
          type: string
          enum: ["buy", "sell"]
          description: "매수/매도 방향"
        type:
          type: string
          enum: ["market", "limit", "stop", "stop_limit"]
          description: "주문 유형"
        quantity:
          type: number
          format: double
          description: "주문 수량"
        price:
          type: number
          format: double
          description: "주문 가격(limit 주문일 경우 필수)"
        stop_price:
          type: number
          format: double
          description: "스탑 가격(stop/stop_limit 주문일 경우 필수)"
        time_in_force:
          type: string
          enum: ["gtc", "ioc", "fok"]
          default: "gtc"
          description: "주문 유효 기간"
        strategy_id:
          type: string
          format: uuid
          description: "전략 ID(자동 매매 전략을 통한 주문일 경우)"
        client_order_id:
          type: string
          description: "클라이언트측 주문 ID"
    
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        client_order_id:
          type: string
        symbol:
          type: string
        side:
          type: string
          enum: ["buy", "sell"]
        type:
          type: string
          enum: ["market", "limit", "stop", "stop_limit"]
        quantity:
          type: number
          format: double
        price:
          type: number
          format: double
        stop_price:
          type: number
          format: double
        time_in_force:
          type: string
          enum: ["gtc", "ioc", "fok"]
        status:
          type: string
          enum: ["new", "partially_filled", "filled", "canceled", "rejected", "expired"]
        filled_quantity:
          type: number
          format: double
        filled_price:
          type: number
          format: double
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        strategy_id:
          type: string
          format: uuid
        error_message:
          type: string
    
    Error:
      type: object
      properties:
        error_code:
          type: string
        message:
          type: string
        details:
          type: object 